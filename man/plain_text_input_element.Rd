% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/block_elements.R
\name{plain_text_input_element}
\alias{plain_text_input_element}
\title{Plain-Text Input Element}
\usage{
plain_text_input_element(
  action_id,
  placeholder = NULL,
  multiline = NULL,
  min_length = NULL,
  max_length = NULL,
  dispatch_action_config = NULL
)
}
\arguments{
\item{action_id}{An identifier for the input value when the parent modal is submitted. You can use this when you receive a view_submission payload to \href{https://api.slack.com/surfaces/modals/using#handling-submissions}{identify the value of the input element}. Should be unique among all other action_ids in the containing block. Maximum length for this field is 255 characters.}

\item{placeholder}{A plain_text only \code{\link{text_object}} that defines the placeholder text shown on the menu. Maximum length for the text in this field is 150 characters.}

\item{multiline}{Indicates whether the input will be a single line (false) or a larger textarea (true). Defaults to false.}

\item{max_length}{The maximum length of input that the user can provide. If the user provides more, they will receive an error.}

\item{dispatch_action_config}{A \code{\link{dispatch_action_configuration_object}} that determines when during text input the element returns a \href{https://api.slack.com/reference/interaction-payloads/block-actions}{block_actions payload}.}

\item{initial_value}{The initial value in the plain-text input when it is loaded.}

\item{min_Length}{The minimum length of input that the user must provide. If the user provides less, they will receive an error. Maximum value is 3000.}
}
\description{
A plain-text input, similar to the HTML \verb{<input>} tag, creates a field where a user can enter freeform data. It can appear as a single-line field or a larger textarea using the multiline flag. To use interactive components, you will need to make some changes to prepare your app. Read our \href{https://api.slack.com/interactivity/handling}{guide to enabling interactivity}. Works with block types: Input. Plain-text input elements are supported in the following \href{https://api.slack.com/surfaces}{app surfaces}: Home tabs Modals
}
\seealso{
\url{https://api.slack.com/reference/block-kit/block-elements#input}

Other Elements: 
\code{\link{button_element}()},
\code{\link{channels_multi_select_menu}()},
\code{\link{channels_select_menu}()},
\code{\link{checkbox_element}()},
\code{\link{conversations_multi_select_menu}()},
\code{\link{conversations_select_menu}()},
\code{\link{datepicker_element}()},
\code{\link{external_multi_select_menu}()},
\code{\link{external_select_menu}()},
\code{\link{image_element}()},
\code{\link{overflow_menu_element}()},
\code{\link{radio_button_group_element}()},
\code{\link{static_multi_select_menu}()},
\code{\link{static_select_menu}()},
\code{\link{timepicker_element}()},
\code{\link{users_multi_select_menu}()},
\code{\link{users_select_menu}()}
}
\concept{Elements}
