% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/views.R
\name{views_update}
\alias{views_update}
\title{Update an Existing View}
\usage{
views_update(
  token,
  view,
  external_id = NULL,
  hash = NULL,
  view_id = NULL,
  return_response = F
)
}
\arguments{
\item{token}{Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.}

\item{view}{A \code{\link{view_object}}.}

\item{external_id}{A unique identifier of the view set by the developer. Must be unique for all views on a team. Max length of 255 characters. Either view_id or external_id is required.}

\item{hash}{A string that represents view state to protect against possible race conditions.}

\item{view_id}{A unique identifier of the view to be updated. Either view_id or external_id is required.}

\item{return_response}{Whether or not to return the API call response as opposed to the response body. Defaults to FALSE (return response body)}
}
\value{
A Success Response with the Updated payload.
}
\description{
Update a view by passing a new view definition object along with the view_id returned in views.open or the external_id. See the \href{https://api.slack.com/surfaces/modals}{modals documentation} to learn more about updating views and avoiding race conditions with the hash argument.
}
\seealso{
https://api.slack.com/methods/views.update

Other Views: 
\code{\link{view_object}()},
\code{\link{views_open}()},
\code{\link{views_publish}()},
\code{\link{views_push}()}
}
\concept{Views}
